// <auto-generated />
using System;
using Elsa.SKS.Package.DataAccess.Sql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Elsa.Sks.Package.DataAccess.Sql.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Elsa.SKS.Package.DataAccess.Entities.GeoCoordinates", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Lat")
                        .HasColumnType("float");

                    b.Property<double?>("Lon")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("GeoCoordinates");
                });

            modelBuilder.Entity("Elsa.SKS.Package.DataAccess.Entities.Hop", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationCoordinatesId")
                        .HasColumnType("int");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessingDelayMins")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationCoordinatesId");

                    b.ToTable("Hops");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Hop");
                });

            modelBuilder.Entity("Elsa.SKS.Package.DataAccess.Entities.HopArrival", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HopId")
                        .HasColumnType("int");

                    b.Property<int?>("ParcelId")
                        .HasColumnType("int");

                    b.Property<int?>("ParcelId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HopId");

                    b.HasIndex("ParcelId");

                    b.HasIndex("ParcelId1");

                    b.ToTable("HopArrival");
                });

            modelBuilder.Entity("Elsa.SKS.Package.DataAccess.Entities.Parcel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RecipientId")
                        .HasColumnType("int");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.Property<int?>("State")
                        .HasColumnType("int");

                    b.Property<string>("TrackingId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("RecipientId");

                    b.HasIndex("SenderId");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("Elsa.SKS.Package.DataAccess.Entities.User", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Elsa.SKS.Package.DataAccess.Entities.WarehouseNextHops", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HopId")
                        .HasColumnType("int");

                    b.Property<int?>("TravelTimeInMinutes")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HopId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("WarehouseNextHops");
                });

            modelBuilder.Entity("Elsa.SKS.Package.DataAccess.Entities.Warehouse", b =>
                {
                    b.HasBaseType("Elsa.SKS.Package.DataAccess.Entities.Hop");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Warehouse");
                });

            modelBuilder.Entity("Elsa.SKS.Package.DataAccess.Entities.Hop", b =>
                {
                    b.HasOne("Elsa.SKS.Package.DataAccess.Entities.GeoCoordinates", "LocationCoordinates")
                        .WithMany()
                        .HasForeignKey("LocationCoordinatesId");

                    b.Navigation("LocationCoordinates");
                });

            modelBuilder.Entity("Elsa.SKS.Package.DataAccess.Entities.HopArrival", b =>
                {
                    b.HasOne("Elsa.SKS.Package.DataAccess.Entities.Hop", "Hop")
                        .WithMany()
                        .HasForeignKey("HopId");

                    b.HasOne("Elsa.SKS.Package.DataAccess.Entities.Parcel", null)
                        .WithMany("FutureHops")
                        .HasForeignKey("ParcelId");

                    b.HasOne("Elsa.SKS.Package.DataAccess.Entities.Parcel", null)
                        .WithMany("VisitedHops")
                        .HasForeignKey("ParcelId1");

                    b.Navigation("Hop");
                });

            modelBuilder.Entity("Elsa.SKS.Package.DataAccess.Entities.Parcel", b =>
                {
                    b.HasOne("Elsa.SKS.Package.DataAccess.Entities.User", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId");

                    b.HasOne("Elsa.SKS.Package.DataAccess.Entities.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId");

                    b.Navigation("Recipient");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Elsa.SKS.Package.DataAccess.Entities.WarehouseNextHops", b =>
                {
                    b.HasOne("Elsa.SKS.Package.DataAccess.Entities.Hop", "Hop")
                        .WithMany()
                        .HasForeignKey("HopId");

                    b.HasOne("Elsa.SKS.Package.DataAccess.Entities.Warehouse", null)
                        .WithMany("NextHops")
                        .HasForeignKey("WarehouseId");

                    b.Navigation("Hop");
                });

            modelBuilder.Entity("Elsa.SKS.Package.DataAccess.Entities.Parcel", b =>
                {
                    b.Navigation("FutureHops");

                    b.Navigation("VisitedHops");
                });

            modelBuilder.Entity("Elsa.SKS.Package.DataAccess.Entities.Warehouse", b =>
                {
                    b.Navigation("NextHops");
                });
#pragma warning restore 612, 618
        }
    }
}
