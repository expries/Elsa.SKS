@using Elsa.SKS.Backend.Services.DTOs
@using Elsa.SKS.Frontend.Configuration
@using Newtonsoft.Json
@inject HttpClient _httpClient;
@inject AppConfiguration _appConfiguration
@inject NavigationManager _navManager;


@if (_parcel is null)
{
    <p class="mt-4"><em>Your Tracking Data:</em></p>
}
else
{
    <p class="mt-4">Parcel State: @_parcel.State</p>
    <table class="table">
        <thead>
            <tr>
                <th>Code</th>
                <th>Description</th>
                <th>Date</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var info in _parcel.FutureHops)
        {
            <tr>
                <td>@info.Code</td>
                <td>@info.Description</td>
                <td>@info.DateTime</td>
            </tr>
        }
        </tbody>
    </table>
}

@code
{
    private TrackingInformation? _parcel;
    
    private string? TrackingId { get; set; }

    
    protected override async Task OnInitializedAsync()
    {
        if (TrackingId is not null)
        {
            await LoadParcel(TrackingId);
        }
    }

    private async Task LoadParcel(string trackingId)
    {
        Console.WriteLine($"Loading tracking for parcel with tracking id {trackingId}");
        
        var url = $"{_appConfiguration.AppUrl}/parcel/{trackingId}";
        var response = await _httpClient.GetAsync(url);
        var stringContent = await response.Content.ReadAsStringAsync();
        _parcel = JsonConvert.DeserializeObject<TrackingInformation>(stringContent);
        
        Console.WriteLine("Loaded parcel tracking information:");
        Console.WriteLine(JsonConvert.SerializeObject(_parcel));
    }
}
