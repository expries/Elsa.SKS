# Build, test and deploy the Elsa-SKS ASP.NET project.

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  backendProjectName: "Elsa.SKS.Backend.Services"
  frontendProjectName: "Elsa.SKS.Frontend.Server"

steps:

- task: DotNetCoreCLI@2
  displayName: 'Restore dependencies'
  inputs:
    command: 'restore'
    configuration: $(buildConfiguration)

- task: DotNetCoreCLI@2
  displayName: 'Build application'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration) --no-restore'

- task: DotNetCoreCLI@2
  displayName: 'Perform tests'
  inputs:
    command: 'test'
    arguments: '--configuration $(buildConfiguration) --no-build --filter TestCategory!=IntegrationTests --collect "XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura'
    publishTestResults: true

- task: DotNetCoreCLI@2
  displayName: 'Publish backend'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/$(backendProjectName).csproj'
    arguments: '--configuration $(buildConfiguration) --no-build --output $(Build.ArtifactStagingDirectory)'

- task: DotNetCoreCLI@2
  displayName: 'Publish frontend'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/$(frontendProjectName).csproj'
    arguments: '--configuration $(buildConfiguration) --no-build --output $(Build.ArtifactStagingDirectory)'

- task: DotNetCoreCLI@2
  displayName: 'Publish integration tests'
  inputs:
    command: 'publish'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    publishWebProjects: false
    zipAfterPublish: false
    projects: '**/*IntegrationTests.csproj'

- task: reportgenerator@4
  displayName: 'Merge code coverage reports'
  inputs:
    reports: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'
    targetdir: '$(Pipeline.Workspace)/coverlet'
    reporttypes: 'Cobertura'
    verbosity: 'Verbose'
     
- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage results'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Pipeline.Workspace)/coverlet/Cobertura.xml'

- task: PublishBuildArtifacts@1
  displayName: 'Publish build artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'elsa-sks'